package practicas;

import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;

import java.sql.*;


public final class Practica7 extends javax.swing.JFrame {
    Connection conn;
    /**
     * Creates new form Practica7
     */
    public Practica7() {
        initComponents();
        this.jLabel4.setText(Integer.toString(this.slHoras.getValue())); 
        
        if (!this.connect()){
            JOptionPane.showMessageDialog(this, "No se pudo conectar con la BD", "Conexion BD", JOptionPane.ERROR_MESSAGE);
        };
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        rbWindows = new javax.swing.JRadioButton();
        rbLinux = new javax.swing.JRadioButton();
        rbMac = new javax.swing.JRadioButton();
        chProg = new javax.swing.JCheckBox();
        chDiseno = new javax.swing.JCheckBox();
        chAdmon = new javax.swing.JCheckBox();
        slHoras = new javax.swing.JSlider();
        btnVotar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Elige un sistema operativo");

        jLabel2.setText("Elige tu especialidad");

        jLabel3.setText("Horas que dedicas a la computadora");

        buttonGroup1.add(rbWindows);
        rbWindows.setSelected(true);
        rbWindows.setText("Windows");

        buttonGroup1.add(rbLinux);
        rbLinux.setText("Linux");

        buttonGroup1.add(rbMac);
        rbMac.setText("Mac");

        chProg.setText("Programación");

        chDiseno.setText("Diseño Grafico");

        chAdmon.setText("Administracion");

        slHoras.setMaximum(24);
        slHoras.setValue(8);
        slHoras.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slHorasStateChanged(evt);
            }
        });

        btnVotar.setText("Votar");
        btnVotar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVotarActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chProg)
                                    .addComponent(chDiseno)
                                    .addComponent(chAdmon)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbLinux)
                            .addComponent(rbWindows)
                            .addComponent(rbMac)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(slHoras, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(btnVotar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addComponent(rbWindows)
                .addGap(18, 18, 18)
                .addComponent(rbLinux)
                .addGap(18, 18, 18)
                .addComponent(rbMac)
                .addGap(35, 35, 35)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(chProg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chDiseno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chAdmon)
                .addGap(41, 41, 41)
                .addComponent(jLabel3)
                .addGap(54, 54, 54)
                .addComponent(slHoras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(btnVotar)
                .addGap(49, 49, 49))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void slHorasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slHorasStateChanged
        this.jLabel4.setText(Integer.toString(this.slHoras.getValue()));
    }//GEN-LAST:event_slHorasStateChanged

    private void btnVotarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVotarActionPerformed
        String cRespuesta = "";
        String sSisOper = "Windows";
        String sProgra = "N";
        String sDiseno = "N";
        String sAdmon  = "N";
        int nHoras = 0;
            
        if (this.rbLinux.isSelected()){
            sSisOper = "Linux";
        } else if (this.rbMac.isSelected()){
            sSisOper = "Mac";
        }
        
        if (this.chProg.isSelected()) sProgra = "S";
        if (this.chDiseno.isSelected()) sDiseno = "S";
        if (this.chAdmon.isSelected()) sAdmon = "S";
        
        nHoras = this.slHoras.getValue();
        
        cRespuesta = String.format("'%s','%s','%s','%s',%d\n",sSisOper,sProgra,sDiseno,sAdmon,nHoras);
        
        FileWriter fw;
        
        try {
            fw = new FileWriter("encuesta.csv",true);
            fw.write(cRespuesta);
            fw.close();
        } catch (IOException ex) {
            Logger.getLogger(Practica7.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        this.guardarBD(sSisOper,sProgra,sDiseno,sAdmon,nHoras);
        
              
        JOptionPane.showMessageDialog(this, "Gracias por su registro", "Encuesta", JOptionPane.INFORMATION_MESSAGE);
       
    }//GEN-LAST:event_btnVotarActionPerformed

    public void loadDriver() throws ClassNotFoundException, InstantiationException, IllegalAccessException{
        Class.forName("com.mysql.cj.jdbc.Driver");
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Practica7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Practica7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Practica7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Practica7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practica7().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVotar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chAdmon;
    private javax.swing.JCheckBox chDiseno;
    private javax.swing.JCheckBox chProg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton rbLinux;
    private javax.swing.JRadioButton rbMac;
    private javax.swing.JRadioButton rbWindows;
    private javax.swing.JSlider slHoras;
    // End of variables declaration//GEN-END:variables

    private boolean connect() {
        boolean conectado = false;
        try {
            this.loadDriver();
            this.conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/encuesta?zeroDateTimeBehavior=CONVERT_TO_NULL"
                                                + "&user=encuesta_user&password=encuesta_pass");
            conectado = true;
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Practica7.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Practica7.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Practica7.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Practica7.class.getName()).log(Level.SEVERE, null, ex);
        }
        return conectado;
    }

    private void guardarBD(String sSisOper, String sProgra, String sDiseno, String sAdmon, int nHoras) {
        if(this.conn==null){
            JOptionPane.showMessageDialog(this,"No hay conexcion con BD", "Conexion BD", JOptionPane.ERROR_MESSAGE);
            return;
        }
         
        try {
            Statement stmt = conn.createStatement();
            stmt.execute(String.format("INSERT INTO respuestas (sSisOper,cProgra,cDiseno,cAdmon,iHoras) values ('%s','%s','%s','%s',%d)",sSisOper, sProgra, sDiseno, sAdmon, nHoras ));
        } catch (SQLException ex) {
            Logger.getLogger(Practica7.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
}


/*

CREATE DATABASE encuesta;

CREATE TABLE "respuestas" (
  "id" int NOT NULL AUTO_INCREMENT,
  "sSisOper" varchar(30) NOT NULL,
  "cProgra" char(1) DEFAULT NULL,
  "cDiseno" char(1) DEFAULT NULL,
  "cAdmon" char(1) DEFAULT NULL,
  "iHoras" mediumint DEFAULT NULL,
  PRIMARY KEY ("id")
);


*/